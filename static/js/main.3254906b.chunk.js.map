{"version":3,"sources":["components/data/velirano.js","components/veliranoItem.js","components/veliranoList.js","App.js","serviceWorker.js","index.js"],"names":["velirano","promise","done","comment","VeliranoItem","props","react_default","a","createElement","es_checkbox","defaultChecked","item","VeliranoList","list","header","title","dataSource","renderItem","Item","veliranoItem","Header","Layout","Content","App","console","log","layout","style","padding","row","col","span","veliranoList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3254906b.chunk.js","sourcesContent":["export const title = \"ToDo List ho an'i Madagasikara\";\n\nexport const sources = [\"Madagascar Liberte, 1/10/19\"];\n\nexport const velirano = [\n  {\n    promise:\n      \"Buildings mora sy aparitaka eran'ny nosy : 50.000 logements ao anatin'ny 5 taona izany hoe eo amin'ny 27 logements par jour eo tokony hitsangana \",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"4*4 mandeha anaty rano sy amin'ny tendrombohitra\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Drône manaraka dahalo\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Miami beach ao Toamasina\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Toilette sy douche manara-penitra any Toamasina\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Palais des sports tahaka ny any France\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Côte d'Azur\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Parking Epp\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"SMIG 200.000 Ar\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise:\n      \"Projet Tanamasoandro : Tanàna lehibe ka hafindra eny avokoa ny birao-panjakana miampy autoroute\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Piscine olympique\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Puce atao amin’ny omby\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Tramway\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Fambolena coton de Tuléar\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Paris (ambatondrazaka)\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Fizarana tany 1Ha isaky ny olona\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Hélicoptères 10\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Fitaovana manara-penitra ho an'ireo miaramila\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Fampiakarana ny vidiny la vanille\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Panneaux solaires hiadiana amin'ny delestazy\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Centrale Eolienne any Diégo\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Projet éthanol miaraka amin’i Mialy\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Lalana (Ambilobe-Vohémar, tetezana ampasika, anosizato)\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Kits scolaires + feutre\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Tsena mora misy vary mora, menaka mora\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Hanome asa sy fitaovana ho an'ireo tanora marobe\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Karaman'i Andry homena ny faritany 6\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Omena bourse ny mpianatra ankatso\",\n    done: false,\n    comment: \"\"\n  },\n  {\n    promise: \"Foanana ny Sénat dia hanamboarana oniversite ny tetibola sénat\",\n    done: false,\n    comment: \"\"\n  }\n];\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\n\nconst VeliranoItem = props => (\n  <div>\n    <Checkbox defaultChecked={props.item.done}>{props.item.promise}</Checkbox>\n  </div>\n);\n\nexport default VeliranoItem;\n","import React from \"react\";\nimport VeliranoItem from \"./veliranoItem\";\nimport { List } from \"antd\";\n\nconst VeliranoList = props => (\n  <List\n    header={<div>{props.title}</div>}\n    dataSource={props.list}\n    renderItem={item => (\n      <List.Item>\n        <VeliranoItem item={item} />\n      </List.Item>\n    )}\n  />\n);\n\nexport default VeliranoList;\n","import React, { Component } from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { velirano, title } from \"./components/data/velirano\";\nimport VeliranoList from \"./components/veliranoList\";\nimport { Row, Col, Layout } from \"antd\";\nconst { Header, Content } = Layout;\n\nclass App extends Component {\n  componentDidMount() {\n    console.log(velirano);\n  }\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Header />\n          <Content style={{ padding: \"0 50px\" }}>\n            <Row>\n              <Col span={6} />\n              <Col span={12}>\n                <VeliranoList list={velirano} title={title} />\n              </Col>\n              <Col span={6} />\n            </Row>\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}